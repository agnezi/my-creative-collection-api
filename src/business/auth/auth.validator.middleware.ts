import { validateOrReject } from 'class-validator';

import type { NextFunction, Request, Response } from 'express';
import { SignUpValidatorSchema } from './auth.class.validator';

export const signUpValidator = async (
  req: Request,
  res: Response,
  next: NextFunction,
) => {
  try {
    if (!req.body) {
      return res.status(400).send({ message: 'Missing request body!' });
    }

    const user = new SignUpValidatorSchema();
    user.username = req.body.username;
    user.email = req.body.email;
    user.password = req.body.password;

    // checks a product instance against the schema validations
    await validateOrReject(user);

    req.body.newUserData = {
      username: req.body.username,
      email: req.body.email,
      password: req.body.password,
    };

    // calls the next operation
    next();
  } catch (e: any) {
    // handles the error generated by class-validator
    const message = Object.values(e[0].constraints)[0];
    res.status(400).send({ message });
  }
};
